<Application x:Class="LibraryManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:librarymanager="clr-namespace:LibraryManager"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:LibraryManager.Converters"
             xmlns:behaviors="clr-namespace:LibraryManager.Behaviors"
             StartupUri="MainWindow.xaml" Exit="Application_Exit">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="/Resources/Cobalt.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="FilterTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Border" Padding="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="LayoutGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" />
                                    </Grid.ColumnDefinitions>
                                    <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Cursor="IBeam" />
                                    <Label x:Name="LabelText" Content="Filter..." Visibility="Hidden" Foreground="#FF808080" Padding="4,0,0,0" FontStyle="Italic" />
                                    <Button x:Name="ClearFilterButton" Style="{StaticResource MetroFlatButton}" Cursor="Arrow" Grid.Column="1" Padding="-4,1,1,1" Margin="0,0,1,0" BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <iconPacks:PackIconMaterial Kind="FilterRemove" Margin="7,2,0,0" Height="14" Width="14"/>
                                    </Button>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text" Value=""/>
                                        <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Visibility" TargetName="LabelText" Value="Visible"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="Text" Value="">
                                    <Trigger.Setters>
                                        <Setter Property="Content" TargetName="ClearFilterButton">
                                            <Setter.Value>
                                                <iconPacks:PackIconMaterial Kind="Filter" Margin="7,2,0,0" Height="14" Width="14"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="IsEnabled" TargetName="ClearFilterButton" Value="False"/>
                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsPressed" SourceName="ClearFilterButton" Value="True">
                                    <Trigger.Setters>
                                        <Setter Property="behaviors:ClearTextBoxBehavior.ClearTextBox" Value="True"/>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="middleAligned" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
                <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                <Setter Property="Padding" Value="8,0"/>
            </Style>
            <Style x:Key="rightAligned" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
                <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                <Setter Property="Padding" Value="8,0"/>
            </Style>
            <Style x:Key="Link" TargetType="Button">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="#032e72"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <TextBlock TextDecorations="Underline" 
                    Text="{TemplateBinding Content}"
                    Background="{TemplateBinding Background}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="#720303"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <GroupStyle x:Key="LibraryDataGridGroupStyle">
                <GroupStyle.ContainerStyle>
                    <Style TargetType="{x:Type GroupItem}">
                        <Setter Property="Margin" Value="0,0,0,5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                    <Expander IsExpanded="True" Foreground="{StaticResource IdealForegroundColorBrush}" BorderThickness="1,1,1,5">
                                        <Expander.Header>
                                            <StackPanel Orientation="Horizontal" Margin="4,2,0,0">
                                                <TextBlock FontWeight="Bold" Text="{Binding Name}"/>
                                                <TextBlock FontWeight="Bold" Text="s:   "/>
                                                <TextBlock FontWeight="Bold" Text="{Binding ItemCount}"/>
                                            </StackPanel>
                                        </Expander.Header>
                                        <ItemsPresenter />
                                    </Expander>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </GroupStyle.ContainerStyle>
            </GroupStyle>
            <Style x:Key="LibraryDataGrid" TargetType="DataGrid" BasedOn="{StaticResource MetroDataGrid}">
                <Style.Resources>
                    <converters:ColorFadeConverter x:Key="colorFadeConverter"/>
                    <converters:IsNewRowConverter x:Key="isNewRowConverter"/>
                    <librarymanager:BindingProxy x:Key="highlightBrush" Data="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}"/>
                </Style.Resources>
                <Style.Setters>
                    <Setter Property="AlternationCount" Value="2"/>
                    <Setter Property="Background" Value="#00000000"/>
                    <Setter Property="AutoGenerateColumns" Value="False"/>
                    <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
                    <Setter Property="GridLinesVisibility" Value="All"/>
                    <Setter Property="SelectionMode" Value="Single"/>
                    <Setter Property="RowHeaderWidth" Value="28"/>
                    <Setter Property="HeadersVisibility" Value="All"/>
                    <Setter Property="CellStyle">
                        <Setter.Value>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                <Setter Property="Padding" Value="8,0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                            <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RowHeaderStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type DataGridRowHeader}" BasedOn="{StaticResource MetroDataGridRowHeader}">
                                <!-- Empty content template for default state. -->
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Border></Border>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEditing, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <iconPacks:PackIconOcticons Kind="Pencil" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=DataContext, Converter={StaticResource isNewRowConverter}}" Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <iconPacks:PackIconOcticons Kind="Plus" VerticalAlignment="Center" HorizontalAlignment="Center" Width="12" Height="12" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RowStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                                <Style.Setters>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Style.Setters>
                                <Style.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                        <Setter Property="Background" Value="#00000000"/>
                                    </Trigger>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="#07000000"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="ItemsControl.AlternationIndex" Value="0"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{Binding Data, ConverterParameter=0.2, Converter={StaticResource colorFadeConverter}, Source={StaticResource highlightBrush}}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="ItemsControl.AlternationIndex" Value="1"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{Binding Data, ConverterParameter=0.3, Converter={StaticResource colorFadeConverter}, Source={StaticResource highlightBrush}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{Binding Data, ConverterParameter=0.92, Converter={StaticResource colorFadeConverter}, Source={StaticResource highlightBrush}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{Binding Data, ConverterParameter=1, Converter={StaticResource colorFadeConverter}, Source={StaticResource highlightBrush}}"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
